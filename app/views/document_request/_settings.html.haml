-# %p
-#   %label= l(:label_contract_request_manager_plural)
-#   = select_tag("settings[principal_id]", principals_options_for_select(Principal.active.all, (Principal.find(@settings[:principal_id]) rescue nil)), :prompt => t(:prompt_please_select))
-# %p
-#   %label= l(:label_project)
-#   = select_tag("settings[project_id]", project_tree_options_for_select(Project.active.all(:order => :name), :selected => (Project.find(@settings[:project_id]) rescue nil)), :prompt => t(:prompt_please_select))
-# %p
-#   %label= l(:label_tracker)
-#   = select_tag("settings[tracker_id]", options_from_collection_for_select(Tracker.all(:order => :position), :id, :name, (@settings[:tracker_id].to_i rescue nil)), :prompt => t(:prompt_please_select))

%p
  %label= l(:label_project)
  = select_tag("settings[project_id]", project_tree_options_for_select(Project.active.all(:order => :name), :selected => (Project.find(@settings[:project_id]) rescue nil)), :prompt => t(:prompt_please_select))
  - enabled_module = EnabledModule.where(name: 'document_request').last
  - project_id = enabled_module.project_id if enabled_module
  - project = Project.find(project_id) if project_id
  = image_tag 'true.png' if project

%p
  %label= l(:label_tracker)
  = select_tag("settings[tracker_id]", options_from_collection_for_select(Tracker.all(:order => :position), :id, :name, (@settings[:tracker_id].to_i rescue nil)), :prompt => t(:prompt_please_select))

%p
  %label= l(:label_assigned_to)
  = select_tag("settings[assigned_to_id]", principals_options_for_select(Principal.active.all, (Principal.find(@settings[:assigned_to_id]) rescue nil)), :prompt => t(:prompt_please_select))

